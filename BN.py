import asyncio
import os
import ccxt.async_support as ccxt_async

async def main():
    print("--- ๐งช Starting Binance Connection Test ๐งช ---")

    # 1. ูุฑุงุกุฉ ุงูููุงุชูุญ ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
    api_key = os.getenv('BINANCE_API_KEY')
    secret_key = os.getenv('BINANCE_API_SECRET')

    if not api_key or not secret_key:
        print("โ FAILURE: ูู ูุชู ุงูุนุซูุฑ ุนูู API Key ุฃู Secret Key.")
        return

    print(f"โ ุชู ุงูุนุซูุฑ ุนูู API Keyุ ูุจุฏุฃ ุจู: {api_key[:5]}...")
    print(f"โ ุชู ุงูุนุซูุฑ ุนูู Secret Keyุ ูุจุฏุฃ ุจู: {secret_key[:5]}...")
    print("--------------------------------------------------")
    print("ุฌุงุฑู ูุญุงููุฉ ุงูุงุชุตุงู ุจุจููุงูุณ ูุฌูุจ ุงูุฑุตูุฏ...")

    # 2. ุฅูุดุงุก ุงุชุตุงู ุจุจููุงูุณ
    exchange = ccxt_async.binance({
        'apiKey': api_key,
        'secret': secret_key,
        'enableRateLimit': True,
    })

    # 3. ูุญุงููุฉ ุฌูุจ ุงูุฑุตูุฏ (ูุฐุง ูุชุทูุจ ููุงุชูุญ ุตุงูุญุฉ)
    try:
        balance = await exchange.fetch_balance()
        print("\nโโโ SUCCESS! โโโ")
        print("ุชู ุงูุงุชุตุงู ุจูุฌุงุญ ูุฌูุจ ุงูุฑุตูุฏ.")
        if 'USDT' in balance['total']:
             print(f"ุฑุตูุฏ USDT ุงูุฅุฌูุงูู: {balance['total']['USDT']}")

    except Exception as e:
        print("\nโโโ FAILURE! โโโ")
        print("ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุญุงููุฉ ุงูุงุชุตุงู:")
        print(f"ููุน ุงูุฎุทุฃ: {type(e).__name__}")
        print(f"ุชูุงุตูู ุงูุฎุทุฃ: {e}")

    finally:
        # 4. ุฅุบูุงู ุงูุงุชุตุงู
        await exchange.close()
        print("--------------------------------------------------")
        print("--- ุงูุชูู ุงูุงุฎุชุจุงุฑ. ---")

if __name__ == '__main__':
    asyncio.run(main())
